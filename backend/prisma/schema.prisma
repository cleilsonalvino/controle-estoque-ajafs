// ================================
// Configuração principal
// ================================
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ================================
// Usuários
// ================================
model Usuario {
  id              String   @id @default(uuid())
  nome            String
  email           String   @unique
  senha           String
  telasPermitidas String[] @default([])
  papel           Papel    @default(USUARIO)
  ativo           Boolean  @default(true)
  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt
  empresaId       String

  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
}

enum Papel {
  ADMINISTRADOR
  USUARIO
  SUPER_ADMIN
}

// ================================
// Produtos e Estoque (com Categoria)
// ================================
model Produto {
  id            String   @id @default(uuid())
  nome          String
  codigoBarras  String?
  descricao     String?
  precoVenda    Decimal  @default(0) @db.Decimal(14, 2)
  estoqueMinimo Decimal? @db.Decimal(14, 3)
  urlImage      String?
  categoriaId   String?
  fornecedorId  String?
  empresaId     String
  criadoEm      DateTime @default(now())
  atualizadoEm  DateTime @updatedAt

  @@unique([empresaId, nome])
  @@unique([empresaId, codigoBarras])

  empresa       Empresa           @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  categoria     CategoriaProduto? @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  fornecedor    Fornecedor?       @relation(fields: [fornecedorId], references: [id], onDelete: Cascade)
  movimentacoes Movimentacao[]
  itensVenda    ItemVenda[]
  lote          Lote[]
}

model CategoriaProduto {
  id           String   @id @default(uuid())
  nome         String
  descricao    String?
  empresaId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@unique([empresaId, nome])

  empresa  Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  produtos Produto[]
}

// ================================
// Movimentações de Estoque
// ================================
enum TipoMovimentacao {
  ENTRADA
  SAIDA
  AJUSTE
}

model Movimentacao {
  id         String           @id @default(uuid())
  produtoId  String
  tipo       TipoMovimentacao
  quantidade Decimal          @db.Decimal(14, 3)
  observacao String?
  criadoEm   DateTime         @default(now())
  loteId     String?
  empresaId  String

  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  lote    Lote?    @relation(fields: [loteId], references: [id], onDelete: Cascade)
  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
}

// ================================
// Fornecedores
// ================================
model Fornecedor {
  id           String   @id @default(uuid())
  nome         String
  endereco     String?
  contato      String?
  email        String?
  telefone     String?
  empresaId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@unique([empresaId, email])
  @@unique([empresaId, nome])

  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  produtos Produto[]
  lote     Lote[]
}

// ================================
// Vendas
// ================================
model Venda {
  id             String   @id @default(uuid())
  numero         String
  clienteId      String?
  vendedorId     String?
  empresaId      String
  total          Decimal  @db.Decimal(14, 2)
  status         String   @default("Concluída")
  tipoVenda      String   @default("Produto")
  formaPagamento String?
  desconto       Decimal? @db.Decimal(14, 2)
  lucroEstimado  Decimal? @db.Decimal(14, 2)
  observacoes    String?
  criadoEm       DateTime @default(now())
  atualizadoEm   DateTime @updatedAt

  @@unique([empresaId, numero])

  empresa     Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  cliente     Cliente? @relation(fields: [clienteId], references: [id])
  vendedor    Vendedor? @relation(fields: [vendedorId], references: [id])
  itens       ItemVenda[]
  ItemServico ItemServico[]
}

// ================================
// Itens da Venda
// ================================
model ItemVenda {
  id            String  @id @default(uuid())
  vendaId       String
  produtoId     String
  quantidade    Decimal @db.Decimal(14, 3)
  precoUnitario Decimal @db.Decimal(14, 2)
  empresaId     String

  venda   Venda   @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
}

// ================================
// Clientes
// ================================
model Cliente {
  id           String   @id @default(uuid())
  nome         String
  cpf          String?
  email        String?
  telefone     String?
  endereco     String?
  empresaId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@unique([empresaId, cpf])
  @@unique([empresaId, email])

  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  vendas  Venda[]
}

// ================================
// Vendedores
// ================================
model Vendedor {
  id           String   @id @default(uuid())
  nome         String
  email        String?
  meta         Decimal? @db.Decimal(14, 2)
  empresaId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@unique([empresaId, email])
  @@unique([empresaId, nome])

  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  vendas  Venda[]
}

// ================================
// Serviços
// ================================
model Servico {
  id             String   @id @default(uuid())
  nome           String
  descricao      String?
  precoCusto     Decimal  @default(0) @db.Decimal(14, 2)
  precoVenda     Decimal  @default(0) @db.Decimal(14, 2)
  duracaoMinutos Int?
  categoriaId    String?
  empresaId      String
  criadoEm       DateTime @default(now())
  atualizadoEm   DateTime @updatedAt

  @@unique([empresaId, nome])

  empresa      Empresa           @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  categoria    CategoriaServico? @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  itensServico ItemServico[]
}

model CategoriaServico {
  id           String   @id @default(uuid())
  nome         String
  descricao    String?
  empresaId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@unique([empresaId, nome])

  empresa  Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  servicos Servico[]
}

model ItemServico {
  id            String  @id @default(uuid())
  vendaId       String
  servicoId     String
  quantidade    Int     @default(1)
  precoUnitario Decimal @db.Decimal(14, 2)
  empresaId     String

  venda   Venda   @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  servico Servico @relation(fields: [servicoId], references: [id], onDelete: Cascade)
  empresa Empresa @relation(fields: [empresaId], references: [id], onDelete: Cascade)
}

// ================================
// Lotes
// ================================
model Lote {
  id              String    @id @default(uuid())
  produtoId       String
  fornecedorId    String?
  empresaId       String
  precoCusto      Decimal   @db.Decimal(14, 2)
  quantidadeAtual Decimal   @db.Decimal(14, 3)
  dataCompra      DateTime  @default(now())
  validade        DateTime?
  criadoEm        DateTime  @default(now())
  atualizadoEm    DateTime  @updatedAt

  empresa       Empresa     @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  produto       Produto     @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  fornecedor    Fornecedor? @relation(fields: [fornecedorId], references: [id], onDelete: SetNull)
  movimentacoes Movimentacao[]
}

// ================================
// Empresa (matriz do sistema)
// ================================
model Empresa {
  id            String   @id @default(uuid())
  nome          String
  cnpj          String   @unique
  telefone      String
  email         String?  @unique
  razaoSocial   String
  nomeFantasia  String
  inscEstadual  String?
  inscMunicipal String?
  cnae          String?

  cep           String
  estado        String
  cidade        String
  endereco      String
  numero        String
  complemento   String?
  bairro        String

  criadoEm      DateTime @default(now())
  atualizadoEm  DateTime @updatedAt

  // Relações
  usuarios           Usuario[]
  produtos           Produto[]
  fornecedores       Fornecedor[]
  clientes           Cliente[]
  vendedores         Vendedor[]
  movimentacoes      Movimentacao[]
  categoriasProduto  CategoriaProduto[]
  categoriasServico  CategoriaServico[]
  servicos           Servico[]
  vendas             Venda[]
  itensVendas        ItemVenda[]
  itensServicos      ItemServico[]
  lotes              Lote[]
}
